<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>KCP-Edge – Documentation</title>
    <link>https://docs.kcp-edge.io/public/docs/</link>
    <description>Recent content in Documentation on KCP-Edge</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://docs.kcp-edge.io/public/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Details</title>
      <link>https://docs.kcp-edge.io/public/docs/coding-milestones/poc2023q1/outline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.kcp-edge.io/public/docs/coding-milestones/poc2023q1/outline/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;Status of this memo: This summarizes the current state of design work that is still in
progress.&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This is a quick demo of a fragment of what we think is needed for edge
multi-cluster.  It is intended to demonstrate the following points.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Separation of inventory and workload management.&lt;/li&gt;
&lt;li&gt;The focus here is on workload management, and that strictly reads
inventory.&lt;/li&gt;
&lt;li&gt;What passes from inventory to workload management is kcp TMC
Location and SyncTarget objects.&lt;/li&gt;
&lt;li&gt;Use of a kcp workspace as the container for the central spec of a workload.&lt;/li&gt;
&lt;li&gt;Propagation of desired state from center to edge, as directed by
EdgePlacement objects and the Location and SyncTarget objects they reference.&lt;/li&gt;
&lt;li&gt;Interfaces designed for a large number of edge clusters.&lt;/li&gt;
&lt;li&gt;Interfaces designed with the intention that edge clusters operate
independently of each other and the center (e.g., can tolerate only
occasional connectivity) and thus any &amp;ldquo;service providers&amp;rdquo; (in the
technical sense from kcp) in the center or elsewhere.&lt;/li&gt;
&lt;li&gt;Rule-based customization of desired state.&lt;/li&gt;
&lt;li&gt;Propagation of reported state from edge to center.&lt;/li&gt;
&lt;li&gt;Summarization of reported state in the center.&lt;/li&gt;
&lt;li&gt;The edge opens connections to the center, not vice-versa.&lt;/li&gt;
&lt;li&gt;An edge computing platform &amp;ldquo;product&amp;rdquo; that can be deployed (as
opposed to a service that is used).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some important things that are not attempted in this PoC include the following.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An implementation that supports a large number of edge clusters or
any other thing that requires sharding for scale.&lt;/li&gt;
&lt;li&gt;More than one SyncTarget per Location.&lt;/li&gt;
&lt;li&gt;Return or summarization of reported state from associated objects
(e.g., ReplicaSet or Pod objects associated with a given Deployment
object).&lt;/li&gt;
&lt;li&gt;A hierarchy with more than two levels.&lt;/li&gt;
&lt;li&gt;User control over ordering of propagation from center to edge,
either among destinations or kinds of objects.&lt;/li&gt;
&lt;li&gt;More than baseline security (baseline being, e.g., HTTPS, Secret
objects, non-rotating bearer token based service authentication).&lt;/li&gt;
&lt;li&gt;A good design for bootstrapping the workload management in the edge
clusters.&lt;/li&gt;
&lt;li&gt;Support for workload object types that are not either built into kcp
or imported via a kcp APIBinding.&lt;/li&gt;
&lt;li&gt;Very strong isolation between tenants in the edge computing
platform.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is TBD whether the implementation will support intermittent
connectivity.  This depends on whether we can quickly and easily get a
syncer that creates the appropriately independent objects in the edge
cluster and itself tolerates intermittent connectivity.&lt;/p&gt;
&lt;p&gt;As further matters of roadmapping development of this PoC:
customization may be omitted at first, and summarization may start
with only a limited subset of the implicit functionality.&lt;/p&gt;
&lt;p&gt;This PoC builds on TMC and makes some compromises to accommodate that.
The implementation involves workload components (syncers) writing
status information to inventory objects (SyncTargets).&lt;/p&gt;
&lt;h2 id=&#34;roles-and-responsibilities&#34;&gt;Roles and Responsibilities&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Developers/deployers/admins/users of the inventory management layer&lt;/li&gt;
&lt;li&gt;Developers of the workload management layer&lt;/li&gt;
&lt;li&gt;Deployers/admins of the workload management layer&lt;/li&gt;
&lt;li&gt;Users of the workload management layer&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;design-overview&#34;&gt;Design overview&lt;/h2&gt;
&lt;p&gt;In very brief: the design is to reduce each edge placement problem to
many instances of kcp&amp;rsquo;s TMC problem.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&#34;Edge-PoC-2023q1.svg&#34;&gt;the overview picture&lt;/a&gt; for an overview
picture.&lt;/p&gt;
&lt;h2 id=&#34;inventory-management-workspaces&#34;&gt;Inventory Management workspaces&lt;/h2&gt;
&lt;p&gt;This design takes as a given that something maintains some kcp
workspaces that contain dynamic collections of Location and SyncTarget
objects as defined in &lt;a href=&#34;https://github.com/kcp-dev/kcp/tree/main/pkg/apis&#34;&gt;kcp
TMC&lt;/a&gt;, and that one
view can be used to read those Location objects and one view can be
used to read those SyncTarget objects.&lt;/p&gt;
&lt;p&gt;To complete the plumbing of the syncers, each inventory workspace that
contains a SyncTarget needs to also contain the following associated
objects.  FYI, these are the things that &lt;code&gt;kubectl kcp workload sync&lt;/code&gt;
directly creates besides the SyncTarget.  Ensuring their presence is
part of the problem of bootstrapping the workload management layer and
is not among the things that this PoC takes a position on.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A ServiceAccount that the syncer will authenticate as.&lt;/li&gt;
&lt;li&gt;A ClusterRole manipulating that SyncTarget and the
APIResourceImports (what are these?).&lt;/li&gt;
&lt;li&gt;A ClusterRoleBinding that links that ServiceAccount with that
ClusterRole.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;edge-service-provider-workspace&#34;&gt;Edge Service Provider workspace&lt;/h2&gt;
&lt;p&gt;The edge multi-cluster service is provided by one workspace that
includes the following things.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An APIExport of the edge API group.&lt;/li&gt;
&lt;li&gt;The edge controllers: scheduler, placement translator, mailbox
controller, and status sumarizer.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;workload-management-workspaces&#34;&gt;Workload Management workspaces&lt;/h2&gt;
&lt;p&gt;The users of edge multi-cluster primarily maintain these.  Each one of
these has both control (API objects that direct the behavior of the
edge computing platform) and data (API objects that hold workload
desired and reported state).&lt;/p&gt;
&lt;h3 id=&#34;data-objects&#34;&gt;Data objects&lt;/h3&gt;
&lt;p&gt;The workload desired state is represented by kube-style API objects,
in the way that is usual in the Kubernetes milieu.  For edge computing
we need to support both cluster-scoped (AKA non-namespaced) kinds as
well as namespaced kinds of objects.&lt;/p&gt;
&lt;p&gt;The use of a workspace as a mere container presents a challenge,
because some kinds of kubernetes API objects at not merely data but
also modify the behavior of the apiserver holding them.  To resolve
this dilemma, the edge users of such a workspace will use a special
view of the workspace that holds only data objects.  The ones that
modify apiserver behavior will be translated by the view into
&amp;ldquo;denatured&amp;rdquo; versions of those objects in the actual workspace so that
they have no effect on it.  And for these objects, the transport from
center-to-edge will do the inverse: translate the denatured versions
into the regular (&amp;ldquo;natured&amp;rdquo;?) versions for appearance in the edge
cluster.  Furthermore, for some kinds of objects that modify apiserver
behavior we want them &amp;ldquo;natured&amp;rdquo; at both center and edge.  There are
thus a few categories of kinds of objects.  Following is a listing,
with with the particular kinds that appear in kcp or plain kubernetes.&lt;/p&gt;
&lt;h4 id=&#34;needs-to-be-denatured-in-center-natured-in-edge&#34;&gt;Needs to be denatured in center, natured in edge&lt;/h4&gt;
&lt;p&gt;For these kinds of objects, clients of the real workspace can
manipulate such objects and they will modify the behavior of the
workspace, while clients of the edge computing view will manipulate
distinct objects that have no effect on the behavior of the workspace.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;APIVERSION&lt;/th&gt;
&lt;th&gt;KIND&lt;/th&gt;
&lt;th&gt;NAMESPACED&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;admissionregistration.k8s.io/v1&lt;/td&gt;
&lt;td&gt;MutatingWebhookConfiguration&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;admissionregistration.k8s.io/v1&lt;/td&gt;
&lt;td&gt;ValidatingWebhookConfiguration&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;flowcontrol.apiserver.k8s.io/v1beta2&lt;/td&gt;
&lt;td&gt;FlowSchema&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;flowcontrol.apiserver.k8s.io/v1beta2&lt;/td&gt;
&lt;td&gt;PriorityLevelConfiguration&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rbac.authorization.k8s.io/v1&lt;/td&gt;
&lt;td&gt;ClusterRole&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rbac.authorization.k8s.io/v1&lt;/td&gt;
&lt;td&gt;ClusterRoleBinding&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rbac.authorization.k8s.io/v1&lt;/td&gt;
&lt;td&gt;Role&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rbac.authorization.k8s.io/v1&lt;/td&gt;
&lt;td&gt;RoleBinding&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1&lt;/td&gt;
&lt;td&gt;LimitRange&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1&lt;/td&gt;
&lt;td&gt;ResourceQuota&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1&lt;/td&gt;
&lt;td&gt;ServiceAccount&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;needs-to-be-natured-in-center-and-edge&#34;&gt;Needs to be natured in center and edge&lt;/h4&gt;
&lt;p&gt;These should have their usual effect in both center and edge; they
need no distinct treatment.&lt;/p&gt;
&lt;p&gt;Note, however, that they &lt;em&gt;do&lt;/em&gt; have some sequencing implications.  They
have to be created before any dependent objects, deleted after all
dependent objects.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;APIVERSION&lt;/th&gt;
&lt;th&gt;KIND&lt;/th&gt;
&lt;th&gt;NAMESPACED&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;apiextensions.k8s.io/v1&lt;/td&gt;
&lt;td&gt;CustomResourceDefinition&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1&lt;/td&gt;
&lt;td&gt;Namespace&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;needs-to-be-natured-in-center-not-destined-for-edge&#34;&gt;Needs to be natured in center, not destined for edge&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;APIVERSION&lt;/th&gt;
&lt;th&gt;KIND&lt;/th&gt;
&lt;th&gt;NAMESPACED&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;apis.kcp.io/v1alpha1&lt;/td&gt;
&lt;td&gt;APIBinding&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;A workload management workspace generally has APIBindings to workload
APIs.  These bindings cause corresponding CRDs to be created in the
same workspace.  The CRDs propagate to the edge, the APIBindings do
not.&lt;/p&gt;
&lt;h4 id=&#34;for-features-not-supported&#34;&gt;For features not supported&lt;/h4&gt;
&lt;p&gt;These are part of k8s or kcp APIs that are not supported by the edge
computing platform.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;APIVERSION&lt;/th&gt;
&lt;th&gt;KIND&lt;/th&gt;
&lt;th&gt;NAMESPACED&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;apiregistration.k8s.io/v1&lt;/td&gt;
&lt;td&gt;APIService&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;apiresource.kcp.io/v1alpha1&lt;/td&gt;
&lt;td&gt;APIResourceImport&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;apiresource.kcp.io/v1alpha1&lt;/td&gt;
&lt;td&gt;NegotiatedAPIResource&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;apis.kcp.io/v1alpha1&lt;/td&gt;
&lt;td&gt;APIConversion&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The APIService objects are of two sorts: (a) those that are built-in
and describe object types built into the apiserver and (b) those that
are added by admins to add API groups served by custom external
servers.  Sort (b) is not supported because this PoC does not support
custom external servers in the edge clusters.  Sort (a) is not
programmable in this PoC, but it might be inspectable.&lt;/p&gt;
&lt;h4 id=&#34;not-destined-for-edge&#34;&gt;Not destined for edge&lt;/h4&gt;
&lt;p&gt;These kinds of objects are concerned with either (a) TMC control or
(b) workload data that should only exist in the edge clusters.  These
will not be available in the view used by edge clients to maintain
their workload desired and reported state.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;APIVERSION&lt;/th&gt;
&lt;th&gt;KIND&lt;/th&gt;
&lt;th&gt;NAMESPACED&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;apis.kcp.io/v1alpha1&lt;/td&gt;
&lt;td&gt;APIExport&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;apis.kcp.io/v1alpha1&lt;/td&gt;
&lt;td&gt;APIExportEndpointSlice&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;apis.kcp.io/v1alpha1&lt;/td&gt;
&lt;td&gt;APIResourceSchema&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;apps/v1&lt;/td&gt;
&lt;td&gt;ControllerRevision&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;authentication.k8s.io/v1&lt;/td&gt;
&lt;td&gt;TokenReview&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;authorization.k8s.io/v1&lt;/td&gt;
&lt;td&gt;LocalSubjectAccessReview&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;authorization.k8s.io/v1&lt;/td&gt;
&lt;td&gt;SelfSubjectAccessReview&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;authorization.k8s.io/v1&lt;/td&gt;
&lt;td&gt;SelfSubjectRulesReview&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;authorization.k8s.io/v1&lt;/td&gt;
&lt;td&gt;SubjectAccessReview&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;certificates.k8s.io/v1&lt;/td&gt;
&lt;td&gt;CertificateSigningRequest&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;coordination.k8s.io/v1&lt;/td&gt;
&lt;td&gt;Lease&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;core.kcp.io/v1alpha1&lt;/td&gt;
&lt;td&gt;LogicalCluster&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;core.kcp.io/v1alpha1&lt;/td&gt;
&lt;td&gt;Shard&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;events.k8s.io/v1&lt;/td&gt;
&lt;td&gt;Event&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scheduling.kcp.io/v1alpha1&lt;/td&gt;
&lt;td&gt;Location&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scheduling.kcp.io/v1alpha1&lt;/td&gt;
&lt;td&gt;Placement&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tenancy.kcp.io/v1alpha1&lt;/td&gt;
&lt;td&gt;ClusterWorkspace&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tenancy.kcp.io/v1alpha1&lt;/td&gt;
&lt;td&gt;Workspace&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tenancy.kcp.io/v1alpha1&lt;/td&gt;
&lt;td&gt;WorkspaceType&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;topology.kcp.io/v1alpha1&lt;/td&gt;
&lt;td&gt;Partition&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;topology.kcp.io/v1alpha1&lt;/td&gt;
&lt;td&gt;PartitionSet&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1&lt;/td&gt;
&lt;td&gt;Binding&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1&lt;/td&gt;
&lt;td&gt;ComponentStatus&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1&lt;/td&gt;
&lt;td&gt;Event&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1&lt;/td&gt;
&lt;td&gt;Node&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;workload.kcp.io/v1alpha1&lt;/td&gt;
&lt;td&gt;SyncTarget&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;already-denatured-in-center-want-natured-in-edge&#34;&gt;Already denatured in center, want natured in edge&lt;/h4&gt;
&lt;p&gt;These are kinds of objects that kcp already gives no interpretation
to.&lt;/p&gt;
&lt;p&gt;This is the default category of kind of object &amp;mdash; any kind of data
object not specifically listed in another category is implicitly in
this category.  Following are the kinds from k8s and kcp that fall in
this category.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;APIVERSION&lt;/th&gt;
&lt;th&gt;KIND&lt;/th&gt;
&lt;th&gt;NAMESPACED&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;apps/v1&lt;/td&gt;
&lt;td&gt;DaemonSet&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;apps/v1&lt;/td&gt;
&lt;td&gt;Deployment&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;apps/v1&lt;/td&gt;
&lt;td&gt;ReplicaSet&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;apps/v1&lt;/td&gt;
&lt;td&gt;StatefulSet&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;autoscaling/v2&lt;/td&gt;
&lt;td&gt;HorizontalPodAutoscaler&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;batch/v1&lt;/td&gt;
&lt;td&gt;CronJob&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;batch/v1&lt;/td&gt;
&lt;td&gt;Job&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;networking.k8s.io/v1&lt;/td&gt;
&lt;td&gt;Ingress&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;networking.k8s.io/v1&lt;/td&gt;
&lt;td&gt;IngressClass&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;networking.k8s.io/v1&lt;/td&gt;
&lt;td&gt;NetworkPolicy&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;node.k8s.io/v1&lt;/td&gt;
&lt;td&gt;RuntimeClass&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;policy/v1&lt;/td&gt;
&lt;td&gt;PodDisruptionBudget&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scheduling.k8s.io/v1&lt;/td&gt;
&lt;td&gt;PriorityClass&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;storage.k8s.io/v1&lt;/td&gt;
&lt;td&gt;CSIDriver&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;storage.k8s.io/v1&lt;/td&gt;
&lt;td&gt;CSINode&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;storage.k8s.io/v1&lt;/td&gt;
&lt;td&gt;CSIStorageCapacity&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;storage.k8s.io/v1&lt;/td&gt;
&lt;td&gt;StorageClass&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;storage.k8s.io/v1&lt;/td&gt;
&lt;td&gt;VolumeAttachment&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1&lt;/td&gt;
&lt;td&gt;ConfigMap&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1&lt;/td&gt;
&lt;td&gt;Endpoints&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1&lt;/td&gt;
&lt;td&gt;PersistentVolume&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1&lt;/td&gt;
&lt;td&gt;PersistentVolumeClaim&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1&lt;/td&gt;
&lt;td&gt;Pod&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1&lt;/td&gt;
&lt;td&gt;PodTemplate&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1&lt;/td&gt;
&lt;td&gt;ReplicationController&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1&lt;/td&gt;
&lt;td&gt;Secret&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1&lt;/td&gt;
&lt;td&gt;Service&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;control-objects&#34;&gt;Control objects&lt;/h3&gt;
&lt;p&gt;These are the EdgePlacement objects, their associated
SinglePlacementSlice objects, and the objects that direct
customization and summarization.&lt;/p&gt;
&lt;h2 id=&#34;mailbox-workspaces&#34;&gt;Mailbox workspaces&lt;/h2&gt;
&lt;p&gt;The mailbox controller maintains one mailbox workspace for each
SyncTarget.  A mailbox workspace acts as a workload source for TMC,
prescribing the workload to go to the corresponding edge pcluster and
holding the corresponding TMC Placement object.&lt;/p&gt;
&lt;p&gt;A mailbox workspace contains the following items.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;APIBindings (maintained by the mailbox controller) to APIExports of
workload object types.&lt;/li&gt;
&lt;li&gt;Workload namespaces holding workload objects, post customization.&lt;/li&gt;
&lt;li&gt;A TMC Placement object.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;edge-cluster&#34;&gt;Edge cluster&lt;/h2&gt;
&lt;p&gt;Also called edge pcluster.&lt;/p&gt;
&lt;p&gt;One of these contains the following items.  FYI, these are the things
in the YAML output by &lt;code&gt;kubectl kcp workload sync&lt;/code&gt;.  The responsibility
for creating and maintaining these objects is part of the problem of
bootstrapping the workload management layer and is not among the
things that this PoC takes a position on.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A namespace that holds the syncer and associated objects.&lt;/li&gt;
&lt;li&gt;A ServiceAccount that the syncer authenticates as when accessing the
views of the center and when accessing the edge cluster.&lt;/li&gt;
&lt;li&gt;A Secret holding that ServiceAccount&amp;rsquo;s authorization token.&lt;/li&gt;
&lt;li&gt;A ClusterRole listing the non-namespaced privileges that the
syncer will use in the edge cluster.&lt;/li&gt;
&lt;li&gt;A ClusterRoleBinding linking the syncer&amp;rsquo;s ServiceAccount and ClusterRole.&lt;/li&gt;
&lt;li&gt;A Role listing the namespaced privileges that the syncer will use in
the edge cluster.&lt;/li&gt;
&lt;li&gt;A RoleBinding linking the syncer&amp;rsquo;s ServiceAccount and Role.&lt;/li&gt;
&lt;li&gt;A Secret holding the kubeconfig that the syncer will use to access
the edge cluster.&lt;/li&gt;
&lt;li&gt;A Deployment of the syncer.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;mailbox-controller&#34;&gt;Mailbox Controller&lt;/h2&gt;
&lt;p&gt;This controller maintains one mailbox workspace per SyncTarget.  Each
of these mailbox workspaces is used for a distinct TMC problem (e.g.,
Placement object).  These workspaces are all children of the edge
service provider workspace.&lt;/p&gt;
&lt;h2 id=&#34;edge-scheduler&#34;&gt;Edge Scheduler&lt;/h2&gt;
&lt;p&gt;This controller monitors the EdgePlacement, Location, and SyncTarget
objects and maintains the results of matching.  For each EdgePlacement
object this controller maintains an associated collection of
SinglePlacementSlice objects holding the matches for that
EdgePlacement.  These SinglePlacementSlice objects appear in the same
workspace as the corresponding EdgePlacement; the remainder of how
they are linked is TBD.&lt;/p&gt;
&lt;h2 id=&#34;placement-translator&#34;&gt;Placement Translator&lt;/h2&gt;
&lt;p&gt;This controller translates each EdgePlacement object into a collection
of TMC Placement objects and corresponding related objects.  For each
matching SinglePlacement, the placement translator maintains a TMC
Placement object and copy of the workload &amp;mdash; customized as directed.
Note that this involves sequencing constraints: CRDs and namespaces
have to be created before anything that uses them, and deleted after
everything that uses them.  Note also that everything that has to be
denatured in the workload management workspace also has to be
denatured in the mailbox workspace.&lt;/p&gt;
&lt;p&gt;The job of the placement translator can be broken down into the
following four parts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Resolve each EdgePlacement&amp;rsquo;s &amp;ldquo;what&amp;rdquo; part to a list of particular
workspace items (namespaces and non-namespaced objects).&lt;/li&gt;
&lt;li&gt;Maintain the association between the resolved &amp;ldquo;where&amp;rdquo; from the edge
scheduler and the resolved what.&lt;/li&gt;
&lt;li&gt;Maintain the copies, with customization, of the workload objects
from source workspace to mailbox workspaces.&lt;/li&gt;
&lt;li&gt;Maintain the TMC Placement objects that derive from the
EdgePlacement objects.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;syncers&#34;&gt;Syncers&lt;/h2&gt;
&lt;p&gt;This design nominally uses TMC and its syncers, but that can not be
exactly true because these syncers need to translate between denatured
objects in the mailbox workspace and natured objects in the edge
cluster.  Or perhaps not, if there is an additional controller in the
edge cluster that handles the denatured-natured relation.&lt;/p&gt;
&lt;h2 id=&#34;status-summarizer&#34;&gt;Status Summarizer&lt;/h2&gt;
&lt;p&gt;For each EdgePlacement object and related objects this controller
maintains the directed status summary objects.&lt;/p&gt;
&lt;h2 id=&#34;usage-scenario&#34;&gt;Usage Scenario&lt;/h2&gt;
&lt;p&gt;The usage scenario breaks, at the highest level, into two parts:
inventory and workload.&lt;/p&gt;
&lt;h3 id=&#34;inventory-usage&#34;&gt;Inventory Usage&lt;/h3&gt;
&lt;p&gt;A user with infrastructure authority creates one or more inventory
management workspaces.  Each such workspace needs to have the
following items, which that user will create if they are not
pre-populated by the workspace type.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An APIBinding to the &lt;code&gt;workload.kcp.io&lt;/code&gt; APIExport to get
&lt;code&gt;SyncTarget&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;An APIBinding to the &lt;code&gt;scheduling.kcp.io&lt;/code&gt; APIExport to get
&lt;code&gt;Location&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;A ServiceAccount (with associated token-bearing Secret) (details
TBD) that the mailbox controller authenticates as.&lt;/li&gt;
&lt;li&gt;A ClusterRole and ClusterRoleBinding that authorize said
ServiceAccount to do what the mailbox controller needs to do.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This user also creates one or more edge clusters.&lt;/p&gt;
&lt;p&gt;For each of those edge clusters, this user creates the following.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a corresponding SyncTarget, with an annotation referring to the
following Secret object, in one of those inventory management
workspaces;&lt;/li&gt;
&lt;li&gt;a Secret, in the same workspace, holding a kubeconfig that the
central automation will use to install the syncer in the edge
cluster;&lt;/li&gt;
&lt;li&gt;a Location, in the same workspace, that matches only that
SyncTarget.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;workload-usage&#34;&gt;Workload usage&lt;/h3&gt;
&lt;p&gt;A user with workload authority starts by creating one or more workload
management workspaces.  Each needs to have the following, which that
user creates if the workload type did not already provide.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An APIBinding to the APIExport of &lt;code&gt;edge.kcp.io&lt;/code&gt; from the edge
service provider workspace.&lt;/li&gt;
&lt;li&gt;For each of the Edge Scheduler, the Placement Translator, and the
Status Summarizer:
&lt;ul&gt;
&lt;li&gt;A ServiceAccount for that controller to authenticate as;&lt;/li&gt;
&lt;li&gt;A ClusterRole granting the privileges needed by that controller;&lt;/li&gt;
&lt;li&gt;A ClusterRoleBinding that binds those two.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This user also uses the edge-workspace-as-container view of each such
workspace to describe the workload desired state.&lt;/p&gt;
&lt;p&gt;This user creates one or more EdgePlacement objects to say which
workload goes where.  These may be accompanied by API objects that
specify rule-baesd customization, specify how status is to be
summarized.&lt;/p&gt;
&lt;p&gt;The edge-mc implementation propagates the desired state from center to
edge and collects the specified information from edge to center.&lt;/p&gt;
&lt;p&gt;The edge user monitors status summary objects in their workload
management workspaces.&lt;/p&gt;
&lt;p&gt;The status summaries may include limited-length lists of broken
objects.&lt;/p&gt;
&lt;p&gt;Full status from the edge is available in the mailbox workspaces.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Invitation</title>
      <link>https://docs.kcp-edge.io/public/docs/coding-milestones/poc2023q1/coding-milestone-invite-q1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.kcp-edge.io/public/docs/coding-milestones/poc2023q1/coding-milestone-invite-q1/</guid>
      <description>
        
        
        &lt;p&gt;Dear Contributors&lt;/p&gt;
&lt;p&gt;We are excited to invite you to join the first &lt;a href=&#34;https://github.com/kcp-dev/edge-mc&#34;&gt;KCP-Edge opensource community&lt;/a&gt; coding sprint. We will be focus on several key projects that are critical to the development of state-based edge solutions. Our collective work will be showcased to the opensource community on Thursday, March 30th.&lt;/p&gt;
&lt;p&gt;This coding sprint will provide a great opportunity for you to showcase your skills, learn new techniques, and collaborate with other experienced engineers in the KCP-Edge community. We believe that your contributions will be invaluable in helping us achieve our goals and making a lasting impact in the field of state-based edge technology.&lt;/p&gt;
&lt;p&gt;The coding sprint will be dedicated to completing the following workload management elements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Implementing an edge scheduler and placement translator, including customization options,&lt;/li&gt;
&lt;li&gt;Incorporating existing customization API into the &lt;a href=&#34;https://github.com/kcp-dev/edge-mc&#34;&gt;KCP-Edge repo&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;Investigating implementation of a status summarizer, starting with basic implicit status, and later adding programmed summarization,&lt;/li&gt;
&lt;li&gt;Updating summarization API and integrating it into the &lt;a href=&#34;https://github.com/kcp-dev/edge-mc&#34;&gt;KCP-Edge repo&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;Streamlining the creation of workload management workspaces,&lt;/li&gt;
&lt;li&gt;Completing our existing implementation of a mailbox controller,&lt;/li&gt;
&lt;li&gt;Examining the use of Postgresql through Kine instead of etcd for scalability,&lt;/li&gt;
&lt;li&gt;Revising the milestone outline with regards to defining bootstrapping and support for cluster-scoped resources.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition to workload management, we will also be working on inventory management for the demo, as well as designing various demo scenarios, including a baseline demo with kubectl, demos with ArgoCD, FluxCD, and the European Space Agency (ESA). To support the engineers and demonstrations we will also need to automate the process of creating infrastructure, deploying demo pieces and instrumentation, bootstrapping, running scenarios, and collecting data.&lt;/p&gt;
&lt;p&gt;If you are interested in joining us for this exciting coding sprint, please slack me &lt;a href=&#34;https://kubernetes.slack.com/team/U0462LN24QJ&#34;&gt;@Andy Anderson&lt;/a&gt; so I can connect you with others in your area of interest.  There is a place for every skillset to contribute. Not quite sure?  You can join our &lt;a href=&#34;https://calendar.google.com/calendar/embed?src=ujjomvk4fa9fgdaem32afgl7g0%40group.calendar.google.com&#34;&gt;bi-weekly community meetings&lt;/a&gt; to watch our progress.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Edge Scheduler</title>
      <link>https://docs.kcp-edge.io/public/docs/concepts/edge-scheduler/</link>
      <pubDate>Thu, 02 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://docs.kcp-edge.io/public/docs/concepts/edge-scheduler/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;The edge scheduler monitors the EdgePlacement, Location, and SyncTarget objects and maintains the results of matching.
It starts from the kcp-scheduling-placement controller forked from kcp-dev/kcp, now being refactored towards the goal above.
It works with &lt;a href=&#34;https://github.com/kcp-dev/kcp/tree/4506fdc064060b3fe82e1082533f9798b36ba7a5&#34;&gt;this snapshot&lt;/a&gt; of kcp.&lt;/p&gt;

&lt;/div&gt;

&lt;h4 id=&#34;a-short-demo&#34;&gt;A short demo&lt;/h4&gt;
&lt;p&gt;Start a kcp server with &lt;a href=&#34;https://github.com/kcp-dev/kcp/tree/4506fdc064060b3fe82e1082533f9798b36ba7a5&#34;&gt;this snapshot&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Point &lt;code&gt;$KUBECONFIG&lt;/code&gt; to the admin kubeconfig for that kcp server.&lt;/p&gt;
&lt;p&gt;Workspace &lt;code&gt;root:edge&lt;/code&gt; is used as the edge service provider workspace.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-style:italic&#34;&gt;kubectl ws root
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-style:italic&#34;&gt;kubectl ws create edge --enter
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Install CRDs and APIExport.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-style:italic&#34;&gt;kubectl apply -f config/crds/ -f config/exports/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;User home workspace is used as the workload management workspace.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-style:italic&#34;&gt;kubectl ws \~
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Bind APIs and create an EdgePlacement CR.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-style:italic&#34;&gt;kubectl apply -f config/imports/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-style:italic&#34;&gt;kubectl apply -f config/samples/edgeplacement_test-1.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Go to &lt;code&gt;root:edge&lt;/code&gt; workspace and run the edge scheduler.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-style:italic&#34;&gt;kubectl ws root:edge
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-style:italic&#34;&gt;go run cmd/placement/main.go --kcp-kubeconfig=&amp;lt;path to kcp admin kubeconfig&amp;gt; -v &amp;lt;verbosity (default 2)&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The outputs from the edge scheduler should be similar to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-style:italic&#34;&gt;I0214 17:09:54.739592   50397 placement.go:207] &amp;#34;Found APIExport view&amp;#34; exportName=&amp;#34;edge.kcp.io&amp;#34; serverURL=&amp;#34;https://192.168.1.54:6443/services/apiexport/21rzp91t9ife44tq/edge.kcp.io&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-style:italic&#34;&gt;I0214 17:09:54.755028   50397 controller.go:182] &amp;#34;queueing EdgePlacement&amp;#34; reconciler=&amp;#34;edge-scheduler&amp;#34; key=&amp;#34;kvdk2spgmbix|test-1&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-style:italic&#34;&gt;I0214 17:09:54.841368   50397 controller.go:257] &amp;#34;Starting controller&amp;#34; reconciler=&amp;#34;edge-scheduler&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-style:italic&#34;&gt;I0214 17:09:54.841492   50397 controller.go:282] &amp;#34;processing key&amp;#34; reconciler=&amp;#34;edge-scheduler&amp;#34; key=&amp;#34;kvdk2spgmbix|test-1&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-style:italic&#34;&gt;reconciling EdgePlacement test-1 in Workspace kvdk2spgmbix
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Go to &lt;code&gt;\~&lt;/code&gt; and edit or delete the EdgePlacement.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl ws \~
kubectl edit edgeplacement test-1
kubectl delete edgeplacement test-1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Additional outputs from the edge scheduler should be similar to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-style:italic&#34;&gt;I0214 17:10:12.404611   50397 controller.go:182] &amp;#34;queueing EdgePlacement&amp;#34; reconciler=&amp;#34;edge-scheduler&amp;#34; key=&amp;#34;kvdk2spgmbix|test-1&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-style:italic&#34;&gt;I0214 17:10:12.404634   50397 controller.go:282] &amp;#34;processing key&amp;#34; reconciler=&amp;#34;edge-scheduler&amp;#34; key=&amp;#34;kvdk2spgmbix|test-1&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-style:italic&#34;&gt;reconciling EdgePlacement test-1 in Workspace kvdk2spgmbix
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-style:italic&#34;&gt;I0214 17:11:21.744670   50397 controller.go:182] &amp;#34;queueing EdgePlacement&amp;#34; reconciler=&amp;#34;edge-scheduler&amp;#34; key=&amp;#34;kvdk2spgmbix|test-1&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-style:italic&#34;&gt;I0214 17:11:21.744695   50397 controller.go:282] &amp;#34;processing key&amp;#34; reconciler=&amp;#34;edge-scheduler&amp;#34; key=&amp;#34;kvdk2spgmbix|test-1&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-style:italic&#34;&gt;I0214 17:11:21.744722   50397 controller.go:308] &amp;#34;object deleted before handled&amp;#34; reconciler=&amp;#34;edge-scheduler&amp;#34; key=&amp;#34;kvdk2spgmbix|test-1&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Mailbox Controller</title>
      <link>https://docs.kcp-edge.io/public/docs/concepts/mailbox-controller/</link>
      <pubDate>Thu, 02 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://docs.kcp-edge.io/public/docs/concepts/mailbox-controller/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;The mailbox controller runs in the edge service provider workspace and maintains a child workspace per SyncTarget.&lt;/p&gt;

&lt;/div&gt;

&lt;h4 id=&#34;temporary-design-detail&#34;&gt;Temporary design detail&lt;/h4&gt;
&lt;p&gt;For a given SyncTarget T, the mailbox controller currently chooses the
name of the corresponding workspace to be the concatenation of the
following.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the ID of the logical cluster containing T&lt;/li&gt;
&lt;li&gt;the string &amp;ldquo;-w-&amp;rdquo;&lt;/li&gt;
&lt;li&gt;T&amp;rsquo;s name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is ambiguous and subject to name length overflows.  Later
revisions will do better.&lt;/p&gt;
&lt;h4 id=&#34;usage&#34;&gt;Usage&lt;/h4&gt;
&lt;p&gt;The command line flags, beyond the basics, are as follows.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;      --concurrency int                  number of syncs to run in parallel (default 4)
      --inventory-context string         current-context override for inventory-kubeconfig (default &amp;#34;root&amp;#34;)
      --inventory-kubeconfig string      pathname of kubeconfig file for inventory service provider workspace
      --server-bind-address ipport       The IP address with port at which to serve /metrics and /debug/pprof/ (default :10203)
      --workload-context string          current-context override for workload-kubeconfig
      --workload-kubeconfig string       pathname of kubeconfig file for edge workload service provider workspace
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;try-it&#34;&gt;Try It&lt;/h4&gt;
&lt;p&gt;To exercise it, do the following steps.&lt;/p&gt;
&lt;p&gt;Start a kcp server.  Do the remaining steps in a separate shell, with
&lt;code&gt;$KUBECONFIG&lt;/code&gt; set to the admin config for that kcp server.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kubectl ws root&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kubectl ws create edge --enter&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;After that, a run of the controller should look like the following.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;base&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; mspreitz@mjs12 edge-mc % go run ./cmd/mailbox-controller -v&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I0127 00:21:48.876022   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;24503&lt;/span&gt; main.go:206&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Found APIExport view&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;exportName&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;workload.kcp.io&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;serverURL&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://192.168.58.123:6443/services/apiexport/root/workload.kcp.io&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I0127 00:21:48.877965   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;24503&lt;/span&gt; shared_informer.go:255&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; Waiting &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; caches to sync &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; mailbox-controller
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I0127 00:21:48.978352   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;24503&lt;/span&gt; shared_informer.go:262&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; Caches are synced &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; mailbox-controller
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I0127 00:21:48.978414   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;24503&lt;/span&gt; main.go:169&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Informers synced&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In a separate shell, &lt;code&gt;kubectl create&lt;/code&gt; the following object.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;workload.kcp.io/v1alpha1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SyncTarget&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;stest1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;cells&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;foo&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bar&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That should provoke logging like the following from the mailbox controller.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;I0127 00:23:52.545266   24503 main.go:330] &amp;#34;Created missing workspace&amp;#34; worker=1 wsName=&amp;#34;269p7excqtb3xen8-w-stest1&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And you can verify that like so.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;base&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; mspreitz@mjs12 kcp % kubectl get Workspace
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME                        TYPE        PHASE   URL                                                     AGE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;269p7excqtb3xen8-w-stest1   universal           https://192.168.58.123:6443/clusters/2ktljajura89bwf2   29s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, &lt;code&gt;kubectl delete&lt;/code&gt; that Workspace, and watch the mailbox
controller wait for it to be gone and then re-create it.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;I0127 00:26:40.251001   24503 main.go:330] &amp;#34;Created missing workspace&amp;#34; worker=2 wsName=&amp;#34;269p7excqtb3xen8-w-stest1&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Finally, &lt;code&gt;kubectl delete SyncTarget stest1&lt;/code&gt; and watch the mailbox
controller react as follows.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;I0127 00:26:59.369990   24503 main.go:311] &amp;#34;Deleted unwanted workspace&amp;#34; worker=1 wsName=&amp;#34;269p7excqtb3xen8-w-stest1&amp;#34;
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: License</title>
      <link>https://docs.kcp-edge.io/public/docs/contribution-guidelines/license/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.kcp-edge.io/public/docs/contribution-guidelines/license/</guid>
      <description>
        
        
        &lt;center&gt;Apache License&lt;/center&gt;
&lt;center&gt;Version 2.0, January 2004&lt;/center&gt;
&lt;center&gt;http://www.apache.org/licenses/&lt;/center&gt;
&lt;/br&gt;
TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Definitions.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;License&amp;rdquo; shall mean the terms and conditions for use, reproduction,
and distribution as defined by Sections 1 through 9 of this document.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Licensor&amp;rdquo; shall mean the copyright owner or entity authorized by
the copyright owner that is granting the License.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Legal Entity&amp;rdquo; shall mean the union of the acting entity and all
other entities that control, are controlled by, or are under common
control with that entity. For the purposes of this definition,
&amp;ldquo;control&amp;rdquo; means (i) the power, direct or indirect, to cause the
direction or management of such entity, whether by contract or
otherwise, or (ii) ownership of fifty percent (50%) or more of the
outstanding shares, or (iii) beneficial ownership of such entity.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;You&amp;rdquo; (or &amp;ldquo;Your&amp;rdquo;) shall mean an individual or Legal Entity
exercising permissions granted by this License.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Source&amp;rdquo; form shall mean the preferred form for making modifications,
including but not limited to software source code, documentation
source, and configuration files.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Object&amp;rdquo; form shall mean any form resulting from mechanical
transformation or translation of a Source form, including but
not limited to compiled object code, generated documentation,
and conversions to other media types.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Work&amp;rdquo; shall mean the work of authorship, whether in Source or
Object form, made available under the License, as indicated by a
copyright notice that is included in or attached to the work
(an example is provided in the Appendix below).&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Derivative Works&amp;rdquo; shall mean any work, whether in Source or Object
form, that is based on (or derived from) the Work and for which the
editorial revisions, annotations, elaborations, or other modifications
represent, as a whole, an original work of authorship. For the purposes
of this License, Derivative Works shall not include works that remain
separable from, or merely link (or bind by name) to the interfaces of,
the Work and Derivative Works thereof.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Contribution&amp;rdquo; shall mean any work of authorship, including
the original version of the Work and any modifications or additions
to that Work or Derivative Works thereof, that is intentionally
submitted to Licensor for inclusion in the Work by the copyright owner
or by an individual or Legal Entity authorized to submit on behalf of
the copyright owner. For the purposes of this definition, &amp;ldquo;submitted&amp;rdquo;
means any form of electronic, verbal, or written communication sent
to the Licensor or its representatives, including but not limited to
communication on electronic mailing lists, source code control systems,
and issue tracking systems that are managed by, or on behalf of, the
Licensor for the purpose of discussing and improving the Work, but
excluding communication that is conspicuously marked or otherwise
designated in writing by the copyright owner as &amp;ldquo;Not a Contribution.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Contributor&amp;rdquo; shall mean Licensor and any individual or Legal Entity
on behalf of whom a Contribution has been received by Licensor and
subsequently incorporated within the Work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Grant of Copyright License. Subject to the terms and conditions of
this License, each Contributor hereby grants to You a perpetual,
worldwide, non-exclusive, no-charge, royalty-free, irrevocable
copyright license to reproduce, prepare Derivative Works of,
publicly display, publicly perform, sublicense, and distribute the
Work and such Derivative Works in Source or Object form.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Grant of Patent License. Subject to the terms and conditions of
this License, each Contributor hereby grants to You a perpetual,
worldwide, non-exclusive, no-charge, royalty-free, irrevocable
(except as stated in this section) patent license to make, have made,
use, offer to sell, sell, import, and otherwise transfer the Work,
where such license applies only to those patent claims licensable
by such Contributor that are necessarily infringed by their
Contribution(s) alone or by combination of their Contribution(s)
with the Work to which such Contribution(s) was submitted. If You
institute patent litigation against any entity (including a
cross-claim or counterclaim in a lawsuit) alleging that the Work
or a Contribution incorporated within the Work constitutes direct
or contributory patent infringement, then any patent licenses
granted to You under this License for that Work shall terminate
as of the date such litigation is filed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Redistribution. You may reproduce and distribute copies of the
Work or Derivative Works thereof in any medium, with or without
modifications, and in Source or Object form, provided that You
meet the following conditions:&lt;/p&gt;
&lt;p&gt;(a) You must give any other recipients of the Work or
Derivative Works a copy of this License; and&lt;/p&gt;
&lt;p&gt;(b) You must cause any modified files to carry prominent notices
stating that You changed the files; and&lt;/p&gt;
&lt;p&gt;(c) You must retain, in the Source form of any Derivative Works
that You distribute, all copyright, patent, trademark, and
attribution notices from the Source form of the Work,
excluding those notices that do not pertain to any part of
the Derivative Works; and&lt;/p&gt;
&lt;p&gt;(d) If the Work includes a &amp;ldquo;NOTICE&amp;rdquo; text file as part of its
distribution, then any Derivative Works that You distribute must
include a readable copy of the attribution notices contained
within such NOTICE file, excluding those notices that do not
pertain to any part of the Derivative Works, in at least one
of the following places: within a NOTICE text file distributed
as part of the Derivative Works; within the Source form or
documentation, if provided along with the Derivative Works; or,
within a display generated by the Derivative Works, if and
wherever such third-party notices normally appear. The contents
of the NOTICE file are for informational purposes only and
do not modify the License. You may add Your own attribution
notices within Derivative Works that You distribute, alongside
or as an addendum to the NOTICE text from the Work, provided
that such additional attribution notices cannot be construed
as modifying the License.&lt;/p&gt;
&lt;p&gt;You may add Your own copyright statement to Your modifications and
may provide additional or different license terms and conditions
for use, reproduction, or distribution of Your modifications, or
for any such Derivative Works as a whole, provided Your use,
reproduction, and distribution of the Work otherwise complies with
the conditions stated in this License.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Submission of Contributions. Unless You explicitly state otherwise,
any Contribution intentionally submitted for inclusion in the Work
by You to the Licensor shall be under the terms and conditions of
this License, without any additional terms or conditions.
Notwithstanding the above, nothing herein shall supersede or modify
the terms of any separate license agreement you may have executed
with Licensor regarding such Contributions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Trademarks. This License does not grant permission to use the trade
names, trademarks, service marks, or product names of the Licensor,
except as required for reasonable and customary use in describing the
origin of the Work and reproducing the content of the NOTICE file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disclaimer of Warranty. Unless required by applicable law or
agreed to in writing, Licensor provides the Work (and each
Contributor provides its Contributions) on an &amp;ldquo;AS IS&amp;rdquo; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
implied, including, without limitation, any warranties or conditions
of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
PARTICULAR PURPOSE. You are solely responsible for determining the
appropriateness of using or redistributing the Work and assume any
risks associated with Your exercise of permissions under this License.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Limitation of Liability. In no event and under no legal theory,
whether in tort (including negligence), contract, or otherwise,
unless required by applicable law (such as deliberate and grossly
negligent acts) or agreed to in writing, shall any Contributor be
liable to You for damages, including any direct, indirect, special,
incidental, or consequential damages of any character arising as a
result of this License or out of the use or inability to use the
Work (including but not limited to damages for loss of goodwill,
work stoppage, computer failure or malfunction, or any and all
other commercial damages or losses), even if such Contributor
has been advised of the possibility of such damages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Accepting Warranty or Additional Liability. While redistributing
the Work or Derivative Works thereof, You may choose to offer,
and charge a fee for, acceptance of support, warranty, indemnity,
or other liability obligations and/or rights consistent with this
License. However, in accepting such obligations, You may act only
on Your own behalf and on Your sole responsibility, not on behalf
of any other Contributor, and only if You agree to indemnify,
defend, and hold each Contributor harmless for any liability
incurred by, or claims asserted against, such Contributor by reason
of your accepting any such warranty or additional liability.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;END OF TERMS AND CONDITIONS&lt;/p&gt;
&lt;p&gt;APPENDIX: How to apply the Apache License to your work.&lt;/p&gt;
&lt;p&gt;To apply the Apache License to your work, attach the following
boilerplate notice, with the fields enclosed by brackets &amp;ldquo;[]&amp;rdquo;
replaced with your own identifying information. (Don&amp;rsquo;t include
the brackets!)  The text should be enclosed in the appropriate
comment syntax for the file format. We also recommend that a
file or class name and description of purpose be included on the
same &amp;ldquo;printed page&amp;rdquo; as the copyright notice for easier
identification within third-party archives.&lt;/p&gt;
&lt;p&gt;Copyright [yyyy] [name of copyright owner]&lt;/p&gt;
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &amp;ldquo;License&amp;rdquo;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &amp;ldquo;AS IS&amp;rdquo; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: KCP-Edge Quickstart Guide</title>
      <link>https://docs.kcp-edge.io/public/docs/getting-started/quickstart/</link>
      <pubDate>Sat, 25 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://docs.kcp-edge.io/public/docs/getting-started/quickstart/</guid>
      <description>
        
        
        &lt;!-- 

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;This document provides instructions on how to build and run KCP-Edge locally.&lt;/p&gt;

&lt;/div&gt;
 --&gt;
&lt;p&gt;To use components from KCP-Edge you must:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install and configure KCP to create a working KCP environment&lt;/li&gt;
&lt;li&gt;Build KCP-Edge&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;1-install-and-configure-kcp&#34;&gt;1. Install and Configure KCP&lt;/h2&gt;
&lt;h3 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/#kubectl&#34;&gt;kubectl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A Kubernetes cluster (for local testing, consider &lt;a href=&#34;http://kind.sigs.k8s.io&#34;&gt;kind&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;download-kcp&#34;&gt;Download kcp&lt;/h3&gt;
&lt;p&gt;Visit our &lt;a href=&#34;https://github.com/kcp-dev/kcp/releases/latest&#34;&gt;latest release page&lt;/a&gt; and download &lt;code&gt;kcp&lt;/code&gt;
and &lt;code&gt;kubectl-kcp-plugin&lt;/code&gt; that match your operating system and architecture.&lt;/p&gt;
&lt;p&gt;Extract &lt;code&gt;kcp&lt;/code&gt; and &lt;code&gt;kubectl-kcp-plugin&lt;/code&gt; and place all the files in the &lt;code&gt;bin&lt;/code&gt; directories somewhere in your &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;start-kcp&#34;&gt;Start kcp&lt;/h3&gt;
&lt;p&gt;You can start kcp using this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kcp start
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This launches kcp in the foreground. You can press &lt;code&gt;ctrl-c&lt;/code&gt; to stop it.&lt;/p&gt;
&lt;p&gt;To see a complete list of server options, run &lt;code&gt;kcp start options&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;set-your-kubeconfig&#34;&gt;Set your KUBECONFIG&lt;/h3&gt;
&lt;p&gt;During its startup, kcp generates a kubeconfig in &lt;code&gt;.kcp/admin.kubeconfig&lt;/code&gt;. Use this to connect to kcp and display the
version to confirm it&amp;rsquo;s working:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;KUBECONFIG&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;.kcp/admin.kubeconfig
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ kubectl version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;yaml&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;json to get the full version.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Client Version: version.Info&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;Major:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;, Minor:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;24&amp;#34;&lt;/span&gt;, GitVersion:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;v1.24.4&amp;#34;&lt;/span&gt;, GitCommit:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;95ee5ab382d64cfe6c28967f36b53970b8374491&amp;#34;&lt;/span&gt;, GitTreeState:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;clean&amp;#34;&lt;/span&gt;, BuildDate:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2022-08-17T18:46:11Z&amp;#34;&lt;/span&gt;, GoVersion:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;go1.19&amp;#34;&lt;/span&gt;, Compiler:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;gc&amp;#34;&lt;/span&gt;, Platform:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;darwin/amd64&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Kustomize Version: v4.5.4
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server Version: version.Info&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;Major:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;, Minor:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;24&amp;#34;&lt;/span&gt;, GitVersion:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;v1.24.3+kcp-v0.8.0&amp;#34;&lt;/span&gt;, GitCommit:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;41863897&amp;#34;&lt;/span&gt;, GitTreeState:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;clean&amp;#34;&lt;/span&gt;, BuildDate:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2022-09-02T18:10:37Z&amp;#34;&lt;/span&gt;, GoVersion:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;go1.18.5&amp;#34;&lt;/span&gt;, Compiler:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;gc&amp;#34;&lt;/span&gt;, Platform:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;darwin/amd64&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;configure-kcp-to-sync-to-your-cluster&#34;&gt;Configure kcp to sync to your cluster&lt;/h3&gt;
&lt;p&gt;kcp can&amp;rsquo;t run pods by itself - it needs at least one physical cluster for that. For this example, we&amp;rsquo;ll be using a
local &lt;code&gt;kind&lt;/code&gt; cluster.  It does not have to exist yet.&lt;/p&gt;
&lt;p&gt;In this recipe we use the root workspace to hold the description of the workload and where it goes.  These usually would go elsewhere, but we use the root workspace here for simplicity.&lt;/p&gt;
&lt;p&gt;Run the following command to tell kcp about the &lt;code&gt;kind&lt;/code&gt; cluster (replace the syncer image tag as needed; CI now puts built images in &lt;a href=&#34;https://github.com/orgs/kcp-dev/packages)&#34;&gt;https://github.com/orgs/kcp-dev/packages)&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ kubectl kcp workload sync kind --syncer-image ghcr.io/kcp-dev/kcp/syncer:v0.10.0 -o syncer-kind-main.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Creating synctarget &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kind&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Creating service account &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kcp-syncer-kind-25coemaz&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Creating cluster role &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kcp-syncer-kind-25coemaz&amp;#34;&lt;/span&gt; to give service account &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kcp-syncer-kind-25coemaz&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 1. write and sync access to the synctarget &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kcp-syncer-kind-25coemaz&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 2. write access to apiresourceimports.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Creating or updating cluster role binding &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kcp-syncer-kind-25coemaz&amp;#34;&lt;/span&gt; to &lt;span style=&#34;color:#204a87&#34;&gt;bind&lt;/span&gt; service account &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kcp-syncer-kind-25coemaz&amp;#34;&lt;/span&gt; to cluster role &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kcp-syncer-kind-25coemaz&amp;#34;&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Wrote physical cluster manifest to syncer-kind-main.yaml &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; namespace &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kcp-syncer-kind-25coemaz&amp;#34;&lt;/span&gt;. Use
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;KUBECONFIG&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&amp;lt;pcluster-config&amp;gt; kubectl apply -f &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;syncer-kind-main.yaml&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to apply it. Use
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;KUBECONFIG&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&amp;lt;pcluster-config&amp;gt; kubectl get deployment -n &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kcp-syncer-kind-25coemaz&amp;#34;&lt;/span&gt; kcp-syncer-kind-25coemaz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to verify the syncer pod is running.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, we need to install the syncer pod on our &lt;code&gt;kind&lt;/code&gt; cluster - this is what actually syncs content from kcp to the
physical cluster. The kind cluster needs to be running by now. Run the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#000&#34;&gt;KUBECONFIG&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&amp;lt;/path/to/kind/kubeconfig&amp;gt; kubectl apply -f &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;syncer-kind-main.yaml&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;namespace/kcp-syncer-kind-25coemaz created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;serviceaccount/kcp-syncer-kind-25coemaz created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;secret/kcp-syncer-kind-25coemaz-token created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;clusterrole.rbac.authorization.k8s.io/kcp-syncer-kind-25coemaz created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;clusterrolebinding.rbac.authorization.k8s.io/kcp-syncer-kind-25coemaz created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;secret/kcp-syncer-kind-25coemaz created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deployment.apps/kcp-syncer-kind-25coemaz created
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;bind-to-workload-apis-and-create-default-placement&#34;&gt;Bind to workload APIs and create default placement&lt;/h3&gt;
&lt;p&gt;If you are running kcp version v0.10.0 or higher, you will need to run the following commmand (continuing in the &lt;code&gt;root&lt;/code&gt; workspace)
to create a binding to the workload APIs export and a default placement for your physical cluster:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ kubectl kcp &lt;span style=&#34;color:#204a87&#34;&gt;bind&lt;/span&gt; compute root
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Binding APIExport &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;root:compute:kubernetes&amp;#34;&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;placement placement-1pfxsevk created.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Placement &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;placement-1pfxsevk&amp;#34;&lt;/span&gt; is ready.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;create-a-deployment-in-kcp&#34;&gt;Create a deployment in kcp&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s create a deployment in our kcp workspace and see it get synced to our cluster:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ kubectl create deployment --image&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;gcr.io/kuar-demo/kuard-amd64:blue --port&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8080&lt;/span&gt; kuard
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deployment.apps/kuard created
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once your cluster has pulled the image and started the pod, you should be able to verify the deployment is running in
kcp:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ kubectl get deployments
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME    READY   UP-TO-DATE   AVAILABLE   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kuard   1/1     &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;            &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;           3s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We are still working on adding support for &lt;code&gt;kubectl logs&lt;/code&gt;, &lt;code&gt;kubectl exec&lt;/code&gt;, and &lt;code&gt;kubectl port-forward&lt;/code&gt; to kcp. For the
time being, you can check directly in your cluster.&lt;/p&gt;
&lt;p&gt;kcp translates the names of namespaces in workspaces to unique names in a physical cluster. We first must get this
translated name; if you&amp;rsquo;re following along, your translated name might be different.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#000&#34;&gt;KUBECONFIG&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&amp;lt;/path/to/kind/kubeconfig&amp;gt; kubectl get pods --all-namespaces --selector &lt;span style=&#34;color:#000&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;kuard
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAMESPACE          NAME                     READY   STATUS    RESTARTS   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kcp-26zq2mc2yajx   kuard-7d49c786c5-wfpcc   1/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          4m28s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we can e.g. check the pod logs:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#000&#34;&gt;KUBECONFIG&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&amp;lt;/path/to/kind/kubeconfig&amp;gt; kubectl --namespace kcp-26zq2mc2yajx logs deployment/kuard &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; head
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2022/09/07 14:04:35 Starting kuard version: v0.10.0-blue
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2022/09/07 14:04:35 **********************************************************************
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2022/09/07 14:04:35 * WARNING: This server may expose sensitive
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2022/09/07 14:04:35 * and secret information. Be careful.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2022/09/07 14:04:35 **********************************************************************
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2022/09/07 14:04:35 Config:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;address&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;:8080&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;debug&amp;#34;&lt;/span&gt;: false,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;debug-sitedata-dir&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;./sitedata&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2-build-and-install-kcp-edge&#34;&gt;2. Build and Install KCP-Edge&lt;/h2&gt;
&lt;p&gt;To build and install KCP-Edge components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;clone the latest KCP-Edge &lt;a href=&#34;https://github.com/kcp-dev/edge-mc&#34;&gt;repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;make tools&lt;/li&gt;
&lt;li&gt;make build&lt;/li&gt;
&lt;li&gt;make install&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;a href=&#34;Makefile&#34;&gt;Makefile&lt;/a&gt; provides a set of targets to help simplify the build
tasks.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make build
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The following targets can be used to lint, test and build the KCP-Edge controllers:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make golint
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make &lt;span style=&#34;color:#204a87&#34;&gt;test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;next-steps&#34;&gt;Next steps&lt;/h2&gt;
&lt;p&gt;Thanks for checking out our quickstart!&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re interested in learning more about all the features KCP and KCP-Edge have to offer, please check out our additional
documentation:&lt;/p&gt;
&lt;h3 id=&#34;kcp&#34;&gt;KCP&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kcp-dev/kcp/tree/main/docs/content/en/main/concepts/concepts.md&#34;&gt;Concepts&lt;/a&gt; - a high level overview of kcp concepts&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kcp-dev/kcp/tree/main/docs/content/en/main/concepts/workspaces.md&#34;&gt;Workspaces&lt;/a&gt; - a more thorough introduction on kcp&amp;rsquo;s workspaces&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kcp-dev/kcp/tree/main/docs/content/en/main/concepts/locations-and-scheduling.md&#34;&gt;Locations &amp;amp; scheduling&lt;/a&gt; - details on kcp&amp;rsquo;s primitives that abstract over clusters&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kcp-dev/kcp/tree/main/docs/content/en/main/concepts/syncer.md&#34;&gt;Syncer&lt;/a&gt; - information on running the kcp agent that syncs content between kcp and a physical cluster&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kcp-dev/kcp/tree/main/docs/content/en/main/concepts/kubectl-kcp-plugin.md&#34;&gt;kubectl plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kcp-dev/kcp/tree/main/docs/content/en/main/concepts/authorization.md&#34;&gt;Authorization&lt;/a&gt; - how kcp manages access control to workspaces and content&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kcp-dev/kcp/tree/main/docs/content/en/main/concepts/virtual-workspaces.md&#34;&gt;Virtual workspaces&lt;/a&gt; - details on kcp&amp;rsquo;s mechanism for virtual views of workspace content&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;kcp-edge&#34;&gt;KCP-Edge&lt;/h3&gt;
&lt;p&gt;TBD&lt;/p&gt;
&lt;h2 id=&#34;contributing&#34;&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We ❤️ our contributors! If you&amp;rsquo;re interested in helping us out, please head over to our &lt;a href=&#34;CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;getting-in-touch&#34;&gt;Getting in touch&lt;/h2&gt;
&lt;p&gt;There are several ways to communicate with us:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href=&#34;https://app.slack.com/client/T09NY5SBT/C021U8WSAFK&#34;&gt;&lt;code&gt;#kcp-dev&lt;/code&gt; channel&lt;/a&gt; in the &lt;a href=&#34;https://slack.k8s.io&#34;&gt;Kubernetes Slack workspace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Our mailing lists:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://groups.google.com/g/kcp-dev&#34;&gt;kcp-dev&lt;/a&gt; for development discussions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;additional-references&#34;&gt;Additional references&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=M4mn_LlCyzk&#34;&gt;Let&amp;rsquo;s Learn kcp - A minimal Kubernetes API server with Saiyam Pathak - July 7, 2021&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://docs.kcp-edge.io/public/docs/getting-started/example-page/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.kcp-edge.io/public/docs/getting-started/example-page/</guid>
      <description>
        
        
        
      </description>
    </item>
    
  </channel>
</rss>
