apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: bindingpolicies.control.kubestellar.io
spec:
  group: control.kubestellar.io
  names:
    kind: BindingPolicy
    listKind: BindingPolicyList
    plural: bindingpolicies
    shortNames:
    - bp
    singular: bindingpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .spec.type
      name: TYPE
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BindingPolicy defines in which ways the workload objects ('what')
          and the destinations ('where') are bound together.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BindingPolicySpec defines the desired state of BindingPolicy
            properties:
              clusterSelectors:
                description: '`clusterSelectors` identifies the relevant Cluster objects
                  in terms of their labels. A Cluster is relevant if and only if it
                  passes any of the LabelSelectors in this field.'
                items:
                  description: A label selector is a label query over a set of resources.
                    The result of matchLabels and matchExpressions are ANDed. An empty
                    label selector matches all objects. A null label selector matches
                    no objects.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            pattern: ^(In|NotIn|Exists|DoesNotExist)$
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              downsync:
                description: '`downsync` selects the objects to bind with the selected
                  WECs for downsync, and describes how to collect the status from
                  those WECs for each of the selected objects. An object is selected
                  if it matches at least one member of this list. All of the referenced
                  StatusCollectors are applied to the object.'
                items:
                  description: DownsyncObjectTestAndStatusCollection identifies some
                    objects (by a predicate) and asks for some combined status to
                    be returned from those objects. The latter is dictated through
                    applying a set of StatusCollectors,
                  properties:
                    apiGroup:
                      description: '`apiGroup` is the API group of the referenced
                        object, empty string for the core API group. `nil` matches
                        every API group.'
                      type: string
                    namespaceSelectors:
                      description: '`namespaceSelectors` a list of label selectors.
                        For a namespaced object, at least one of these label selectors
                        has to match the labels of the Namespace object that defines
                        the namespace of the object that this DownsyncObjectTest is
                        testing. For a cluster-scoped object, at least one of these
                        label selectors must be `{}`. Empty list is a special case,
                        it matches every object.'
                      items:
                        description: A label selector is a label query over a set
                          of resources. The result of matchLabels and matchExpressions
                          are ANDed. An empty label selector matches all objects.
                          A null label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      type: array
                    namespaces:
                      description: '`namespaces` is a list of acceptable names for
                        the object''s namespace. An entry of `"*"` means that any
                        namespace is acceptable; this is the only way to match a cluster-scoped
                        object. If this list contains `"*"` then it should contain
                        nothing else. Empty list is a special case, it matches every
                        object.'
                      items:
                        type: string
                      type: array
                    objectNames:
                      description: '`objectNames` is a list of object names that match.
                        An entry of `"*"` means that all match. If this list contains
                        `"*"` then it should contain nothing else. Empty list is a
                        special case, it matches every object.'
                      items:
                        type: string
                      type: array
                    objectSelectors:
                      description: '`objectSelectors` is a list of label selectors.
                        At least one of them must match the labels of the object being
                        tested. Empty list is a special case, it matches every object.'
                      items:
                        description: A label selector is a label query over a set
                          of resources. The result of matchLabels and matchExpressions
                          are ANDed. An empty label selector matches all objects.
                          A null label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      type: array
                    resources:
                      description: '`resources` is a list of lowercase plural names
                        for the sorts of objects to match. An entry of `"*"` means
                        that all match. If this list contains `"*"` then it should
                        contain nothing else. Empty list is a special case, it matches
                        every object.'
                      items:
                        type: string
                      type: array
                    statusCollectors:
                      description: statusCollectors is a list of StatusCollectors
                        name references that are applied to the selected objects.
                        This API is under development and is not yet functional.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              wantSingletonReportedState:
                description: WantSingletonReportedState means that for objects that
                  are distributed --- taking all BindingPolicies into account ---
                  to exactly one WEC, the object's reported state from the WEC should
                  be written to the object in its WDS. WantSingletonReportedState
                  connotes an expectation that indeed the object will propagate to
                  exactly one WEC, but there is no guaranteed reaction when this expectation
                  is not met.
                type: boolean
            type: object
          status:
            description: BindingPolicyStatus defines the observed state of BindingPolicy
            properties:
              conditions:
                items:
                  description: BindingPolicyCondition describes the state of a bindingpolicy
                    at a certain point.
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    lastUpdateTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              errors:
                items:
                  type: string
                type: array
              observedGeneration:
                format: int64
                type: integer
            required:
            - conditions
            - observedGeneration
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: bindings.control.kubestellar.io
spec:
  group: control.kubestellar.io
  names:
    kind: Binding
    listKind: BindingList
    plural: bindings
    shortNames:
    - bdg
    singular: binding
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Binding is mapped 1:1 to a single BindingPolicy object. Binding
          reflects the resolution of the BindingPolicy's selectors, and explicitly
          reflects which objects should go to what destinations.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: '`spec` explicitly describes a desired binding between workloads
              and Locations. It reflects the resolution of a BindingPolicy''s selectors.'
            properties:
              destinations:
                description: '`destinations` is a list of cluster-identifiers that
                  the objects should be propagated to.'
                items:
                  description: Destination wraps the identifiers required to uniquely
                    identify a destination cluster.
                  properties:
                    clusterId:
                      type: string
                  type: object
                type: array
              workload:
                description: '`workload` is a collection of namespaced and cluster
                  scoped object references and their associated resource versions,
                  to be propagated to destination clusters.'
                properties:
                  clusterScope:
                    description: '`clusterScope` holds a list of cluster-scoped object
                      references with their associated resource versions to downsync.'
                    items:
                      description: ClusterScopeDownsyncObject represents a specific
                        cluster-scoped object to downsync, identified by its GroupVersionResource
                        and name. The ResourceVersion specifies the exact version
                        of the object to downsync.
                      properties:
                        group:
                          type: string
                        name:
                          description: '`name` of the object to downsync.'
                          type: string
                        resource:
                          type: string
                        resourceVersion:
                          description: '`resourceVersion` is the version of the resource
                            to downsync.'
                          type: string
                        version:
                          type: string
                      required:
                      - group
                      - name
                      - resource
                      - resourceVersion
                      - version
                      type: object
                    type: array
                  namespaceScope:
                    description: '`namespaceScope` holds a list of namespace-scoped
                      object references with their associated resource versions to
                      downsync.'
                    items:
                      description: NamespaceScopeDownsyncObject represents a specific
                        namespace-scoped object to downsync, identified by its GroupVersionResource,
                        namespace, and name. The ResourceVersion specifies the exact
                        version of the object to downsync.
                      properties:
                        group:
                          type: string
                        name:
                          description: '`name` of the object to downsync.'
                          type: string
                        namespace:
                          description: '`namespace` of the object to downsync.'
                          type: string
                        resource:
                          type: string
                        resourceVersion:
                          description: '`resourceVersion` is the version of the resource
                            to downsync.'
                          type: string
                        version:
                          type: string
                      required:
                      - group
                      - name
                      - namespace
                      - resource
                      - resourceVersion
                      - version
                      type: object
                    type: array
                type: object
            type: object
          status:
            properties:
              errors:
                items:
                  type: string
                type: array
              observedGeneration:
                format: int64
                type: integer
            required:
            - observedGeneration
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: customtransforms.control.kubestellar.io
spec:
  group: control.kubestellar.io
  names:
    categories:
    - all
    kind: CustomTransform
    listKind: CustomTransformList
    plural: customtransforms
    shortNames:
    - ct
    singular: customtransform
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.apiGroup
      name: SUBJECT_GROUP
      type: string
    - jsonPath: .spec.resource
      name: SUBJECT_RESOURCE
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CustomTransform describes how to select and transform some objects
          on their way from WDS to WEC, without regard to the WEC (i.e., not changes
          that are specific to the individual WEC). The transformation specified here
          is in addition to, and follows, whatever is built into KubeStellar for that
          object.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CustomTransformSpec selects some objects and describes how
              to transform them. The selected objects are those that match the `apiGroup`
              and `resource` fields.
            properties:
              apiGroup:
                description: '`apiGroup` holds just the group, not also the version'
                type: string
              remove:
                description: '`remove` is a list of JSONPath expressions (https://goessner.net/articles/JsonPath/)
                  that identify part of the object to remove if present. Only a subset
                  of JSONPath is supported. The expression used in a filter must be
                  a conjunction of field == literal tests. Examples: - "$.spec.resources.GenericItems[*].generictemplate.metadata.resourceVersion"
                  - "$.store.book[?(@.author == ''Kilgore Trout'' && @.category ==
                  ''fiction'')].price"'
                items:
                  type: string
                type: array
              resource:
                description: '`resource` is the lowercase plural way of identifying
                  a sort of object. "subresources" can not be directly bound to, only
                  whole (top-level) objects.'
                type: string
            required:
            - apiGroup
            - resource
            type: object
          status:
            properties:
              errors:
                items:
                  type: string
                type: array
              observedGeneration:
                format: int64
                type: integer
              warnings:
                items:
                  type: string
                type: array
            required:
            - observedGeneration
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
